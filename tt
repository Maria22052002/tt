Twint: coleta de dados do twitter com python
Naiara Cerqueira

Naiara Cerqueira

21 de setembro de 2020 · 3 minutos de leitura

img

Logo do Twitter

O twitter é uma fonte de dados em constante crescimento. Porém, quando iniciamos a coleta de dados, experimentamos que a API limita o número de tweets coletados a 3.200 .

Para nossa sorte, existe o Twint , uma biblioteca do python que tem a vantagem de conseguir buscar quase todos os tweets, ter configuração rápida e poder ser utilizada anonimamente, sem necessidade de login no twitter. Uma gaiola é que, até o momento, ela não funciona em notebooks jupyter.

A instalação pode ser feita de diversas maneiras (para mais informações, clique aqui ):

Git :

git clone https://github.com/twintproject/twint.git pip3 install -r requirements.txt
pip :

pip3 install twint
Ou :

pip3 install --user --upgrade -e git+https://github.com/twintproject/twint.git@origin/master#egg=twint
Pipenv :

pipenv install -e git+https://github.com/twintproject/twint.git#egg=twint
A busca pode ser realizada pela linha de comando. Alguns exemplos são:

twint -u *usuário*- busca todos os tweets do usuário
twint -u *usuário* -s *palavra*- busca tweets do usuário contendo uma palavra
twint -s *palavra*- busca todos os tweets contendo determinada palavra
twint -u *usuário* --year *2018*- busca tweets postados antes de 2018
twint -u *usuário* --since "*2020-09-18 20:30:15*"— busca tweets desde a data / hora citada, se hora ocultada, o padrão é 00:00:00.
twint -u *usuário* -o *arquivo.txt*- salva os tweets não*arquivo.txt*
twint -u *usuário* -o *arquivo.csv* --csv-salva os tweets no *arquivo.csv* . O mesmo pode ser feito com arquivos json (file.json --json) ou bando de dados SQLite ou banco de dados SQLite ( --database tweets.db)
twint -u *usuário* --email --phone- mosta tweets que possuem telefones e emails
twint -s "*palavra*" --verified- mosta tweets de pessoas verificadas sobre algum tema/palavra.
twint -u *usuário* --followers- busca por seguidores de um usuário ou quem um usuário segue ( --following)
twint -u *usuário* --favorites- busca os tweets favoritos de um usuário (~3200 tweets).
Diversas outras opções de configurações de busca podem ser encontradas aqui .

Muito legal, certo? Mas é ainda mais interessante realizar uma configuração mais detalhada utilizando um IDE:

img

Importação de tweets sobre Bolsonaro e Covid

Por exemplo, nessa busca aqui, eu procurei todos os tweets em português que citavam 'Bolsonaro' e 'Covid', no intervalo do dia 01 de março até dia 31 de agosto, salvando um arquivo csv numa pasta 'bolsonaro_pandemia'.

Vamos entender em detalhes : primeiro criamos um objeto de configuração, que chamei de c:

c = twint.Config()
Agora, podemos configurar os parâmetros, como, por exemplo, nome do usuário, termo de pesquisa, língua desejada, intervalo de tempo, etc. (as configurações disponíveis estão aqui ):

c.Username = "usuário"
c.Search = "termo de pesquisa"
c.Lang = "pt"
c.Year = "2019"
Para salvar um arquivo de saída com os dados de busca, por exemplo, em formato csv:

c.Output = "nome_do_arquivo.csv"
c.Store_csv = True
Depois de tudo configurado, é só rodar a busca:

twint.run.Search(c)
